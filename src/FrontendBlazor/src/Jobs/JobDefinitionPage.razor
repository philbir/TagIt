@attribute [Route(Routing.JobDefintions.Page)]

@if (jobDefinitions is not null)
{
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudDataGrid Items="@jobDefinitions" Striped>
            <Columns>
                <Column T="JobDefinitionItem" Field="Name" />
                <Column T="JobDefinitionItem" Field="RunMode" />
                <Column T="JobDefinitionItem" Field="Filter" />
                <Column T="JobDefinitionItem" Field="SourceConnectorName" Title="Connector" />
                <Column T="JobDefinitionItem" Field="Enabled"  />
                <Column T="JobDefinitionItem" CellClass="d-flex justify-end">
                    <CellTemplate>
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick="@context.Actions.StartEditingItem" />
                    </CellTemplate>
                </Column>
            </Columns>
        </MudDataGrid>
        <MudFab Class="mt-10" Href="@Routing.JobDefintions.Add" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" />
    </MudContainer>
}
else
{
    <div>Loading</div>
}

@code {

    [Inject]
    public JobDefintionSearchQuery SearchQuery { get; set; }

    public IEnumerable<JobDefinitionItem>? jobDefinitions = null;

    private IDisposable storeJobDefintions;

    override protected async Task OnInitializedAsync()
    {
        storeJobDefintions = SearchQuery
         .Watch(ExecutionStrategy.CacheAndNetwork)
         .Where(x => !x.Errors.Any())
         .Select(x => x.Data.JobDefinitions.Nodes.Select(
             t => new JobDefinitionItem(
                 t.Id,
                 t.Name,
                 t.RunMode.ToString(),
                 t.Filter,
                 t.SourceConnector.Name,
                 t.Enabled)))

         .Subscribe(result =>
         {
             jobDefinitions = result;
             StateHasChanged();
         });
    }

    public record JobDefinitionItem(
        string Id,
        string Name,
        string RunMode,
        string Filter,
        string SourceConnectorName, bool Enabled);
}
